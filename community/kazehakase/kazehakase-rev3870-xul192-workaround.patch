Index: macros/gecko.m4
===================================================================
--- macros/gecko.m4	(revision 3870)
+++ macros/gecko.m4	(working copy)
@@ -197,6 +197,8 @@
 		       [Whether to use mozilla, firefox seamonkey xpcom (default: mozilla)]),
 	[GECKO="$withval"])
 
+LIBXUL_UNIFIED_VER=1.9.2
+LIBXUL_UNIFIED=0
 AC_MSG_CHECKING([for gecko engine])
 if test "x$GECKO" = "xno"; then
   GECKO=
@@ -216,6 +218,9 @@
     GECKO=xulrunner
   elif $PKG_CONFIG --exists libxul-unstable; then
     GECKO=libxul
+  elif $PKG_CONFIG --exists "libxul >= $LIBXUL_UNIFIED_VER" ; then
+    GECKO=libxul
+    LIBXUL_UNIFIED=1
   else
     gecko_engine_not_found_message="not found"
   fi
@@ -239,7 +244,10 @@
   mozilla-firefox) min_version=1.0 ;;
   seamonkey) min_version=1.1 ;;
   xulrunner) min_version=1.8 ;;
-  libxul) min_version=1.9 ;;
+  libxul) 
+    min_version=1.9
+    if test x"$LIBXUL_UNIFIED"="x1" ; then min_version=1.9.2 ; fi
+    ;;
   esac
   
   dnl **************************************************************
@@ -250,13 +258,21 @@
   		enable_gtkmozembed=no)
   if test x"$enable_gtkmozembed" = "xyes"; then
     if test x"$GECKO" = "xlibxul"; then
-      GECKO_MODULE=$GECKO-unstable
+      if test x"$LIBXUL_UNIFIED"="x1" ; then
+        GECKO_MODULE=$GECKO
+      else
+        GECKO_MODULE=$GECKO-unstable
+      fi
     else
       GECKO_MODULE=$GECKO-xpcom
     fi
   else
     if test x"$GECKO" = "xlibxul"; then
-      GECKO_MODULE=$GECKO-embedding-unstable
+      if test x"$LIBXUL_UNIFIED"="x1" ; then
+        GECKO_MODULE=$GECKO-embedding
+      else
+        GECKO_MODULE=$GECKO-embedding-unstable
+      fi
     else
       GECKO_MODULE=$GECKO-gtkmozembed
     fi
Index: module/embed/gecko/kz-mozwrapper.cpp
===================================================================
--- module/embed/gecko/kz-mozwrapper.cpp	(revision 3870)
+++ module/embed/gecko/kz-mozwrapper.cpp	(working copy)
@@ -97,6 +97,7 @@
 #include <nsIDocCharset.h>
 
 
+#if 0
 typedef nsString              nsAFlatString;
 typedef nsCString             nsAFlatCString;
 #ifndef G_OS_WIN32
@@ -106,6 +107,7 @@
 #  undef nsAString_h___
 #  undef nsString_h___
 #endif
+#endif
 
 #include "kz-mozprogresslistener.h"
 #include "kz-mozutils.h"
@@ -203,8 +205,11 @@
 	nsCOMPtr<nsIDocShell> docShell;
 	rv = GetDocShell(getter_AddRefs(docShell));
 
-	rv = docShell->GetSecurityUI(getter_AddRefs(mSecurityInfo));
-	NS_ENSURE_SUCCESS(rv, rv);
+	if (docShell){
+	  rv = docShell->GetSecurityUI(getter_AddRefs(mSecurityInfo));
+	  NS_ENSURE_SUCCESS(rv, rv);
+	}
+	else return NS_ERROR_FAILURE;
 
 	return NS_OK;
 }
@@ -2152,7 +2157,7 @@
 gboolean
 KzMozWrapper::SetZoomOnDocShell (float aZoom, nsIDocShell *DocShell)
 {
-#ifndef G_OS_WIN32
+#if 0
 	nsCOMPtr<nsPresContext> PresContext;
 	nsresult rv = DocShell->GetPresContext (getter_AddRefs(PresContext));
 	if (NS_FAILED(rv) || !PresContext) return FALSE;
