--- network.org	2010-04-28 10:21:14.000000000 +0000
+++ network	2010-04-28 10:24:00.000000000 +0000
@@ -34,51 +34,6 @@
 
 
 #
-# find_networking_script --
-#
-#    Searches common Linux distro init/rc paths to find a singular network
-#    services script.
-#
-# Result:
-#    Returns a valid networking script path on success or "error" on failure.
-#
-# Side effects:
-#    None.
-#
-
-find_networking_script() {
-    local script="error"
-    for dir in "/etc/init.d" "/sbin/init.d" "/etc" "/etc/rc.d" ; do
-        if [ -d "$dir/rc0.d" ] &&
-	    [ -d "$dir/rc1.d" ] &&
-	    [ -d "$dir/rc2.d" ] &&
-	    [ -d "$dir/rc3.d" ] &&
-	    [ -d "$dir/rc4.d" ] &&
-	    [ -d "$dir/rc5.d" ] &&
-	    [ -d "$dir/rc6.d" ]; then
-
-	    # Now find the appropriate networking script.
-	    if [ -d "$dir/init.d" ]; then
-		if [ -x "$dir/init.d/network" ]; then
-		    script="$dir/init.d/network"
-		elif [ -x "$dir/init.d/networking" ]; then
-		    script="$dir/init.d/networking"
-		fi
-	    else
-		if [ -x "$dir/network" ]; then
-		    script="$dir/network"
-		elif [ -x "$dir/networking" ]; then
-		    script="$dir/networking"
-		fi
-	    fi
-        fi
-    done
-
-    echo "$script"
-}
-
-
-#
 # save_active_NIC_list --
 #
 #    Records a list of every active NIC to /var/run/vmware-active-nics.
@@ -205,7 +160,7 @@
    exitCode=0
    activeList=/var/run/vmware-active-nics
 
-   networkScript=`find_networking_script`
+   networkScript=/etc/rc.d/network
    [ "$networkScript" != "error" ] || Panic "Cannot find system networking script."
 
    # XXX Are these really necessary?  If so, we should have seen customer
